进程
进程必须有一个执行的线程
进程是一堆资源的集合
进程间的内存的是独立
多个子进程的内存数据不共享，独立的，从父进程处复制一份内存数据，子进程之间无法相互访问
两个进程之间通信，必须通过中间代理来实现
进程仅能够操作子进程
对父进程的修改，不会影响子进程


线程
线程是执行一个指令
主线程是进程启动的时候的第一个线程
进程是通过线程来运行
同一个进程内的线程共享内存空间
同一个进程内的线程之间可以相互访问
一个线程能够控制或操作同一个进程里的其他线程
对主线程的修改，可能会影响其他线程
操作CPU的最小单位
线程同一时间修改同一份数据时，必须加锁，即互斥锁
jion等待线程执行结束

python中，无论CPU的核数，同一时间只能启用一个线程，CPU太快，上下文切换导致我们感觉同一时间能够处理多个线程。

而在有些语言中，如果CPU有4核，则同一时间可以启用四个任务。



创建新线程很简单，创建新进程，需要复制一份父进程


线程快还是进程快？没有可比性
启动一个线程比启动一个进程快（因为进程需要申请资源并创建至少一个线程


Python的多线程不适合CPU密集型的操作，适合IO密集型的操作

IO操作不占用CPU
计算操作占用CPU
